@import url('https://cdnjs.cloudflare.com/ajax/libs/normalize/7.0.0/normalize.min.css');

/*********************************************************************
  YOUR MOBILE/BASE STYLES GO HERE
*********************************************************************/
/* This is what is called a reset. Different browsers have different default padding and margins. Using the * reserts all depault elements to have zero padding and margin. */
* {
    box-sizing: border-box;
}

body,
html {
    /* Sets default font-size to 16px, ensuring 1em = 16px; */
font-family: 'Lato', sans-serif;
font-family: 'Roboto', sans-serif;
font-family: 'Roboto Condensed', sans-serif;
font-family: 'Young Serif', serif;
}

/* Adds responsiveness to all images */
img {
    width: 100%;
}

div.container{
    background-color: #d9ead3;
}
.container {
    width: 100%;
    padding: 10px;
    /* Added a max-width so that this one style block works on all devices */
    max-width: 1200px;
    /* Margin to center the container when it's not the full width */
    margin: 0 auto;
}

.top {
    max-width: 100%;
    padding: 10px;
}

figure {
    margin: auto;
}

.main_img {
    width: 100%;
}

h1,
h2 {
    font-family: 'Roboto', sans-serif;
font-family: 'Young Serif', serif;
    color: #000000;
}

h1 {
    font-size: 2.5em;
    font-weight: 900;
}

h2 {
    font-size: 1.7em;
    font-weight: 300;
}

h3.flex-hed {
    font-size: 1.5em;
    padding: 10px;
 font-family: 'Roboto', sans-serif;
font-family: 'Young Serif', serif;
    color: ##000000;}

p {
font-family: 'Roboto Condensed', sans-serif;
    color: #000000;
}

/*
 * Cleaned up figure styles so that you had better control over image sizing throughout the page
 */
figure {
    display: block;
    width: 100%;
    max-width: 600px;
}
.container {flex-direction: row}

figcaption {
    font-size: 1.2em;
    font-family: 'Roboto', sans-serif;
font-family: 'Roboto Condensed', sans-serif;
font-family: 'Young Serif', serif;
    padding: 10px;
    background-color: #d9ead3;
    color: #000000;
}

.sub_cap {
    font-size: .8em;
    font-family: 'Playfair Display', serif;
    color: #000000;
}

.credit {
    color: gray;
    font-family: 'Playfair Display', serif;
    color: #000000;
}

.img_holder,
.text {
    font-size: 1.4em;
    padding: 10px;
    font-family: 'Playfair Display', serif;
    color: #000000;
}

/*********************************************************************
  YOUR TABLET/DESKTOP STYLES GO HERE
*********************************************************************/
@media(min-width: 681px) {

    /* Any adjustments for tablets and larger go here.
    Note these styles will be applied to anything 681px or larger -- so tablet AND desktop */
    /* Since you seem to want the flex elements to stack as normal on mobile, I just didn't define the flex
     * styles until tablet. Less code that way
     */
    .flex {
        /* Flex box styles go on the flex box element */
        display: flex;
        justify-content: space-between;
    }

    /* How you want content to flex goes on the elements that do the flexing */
    .img_holder {
        /* There are many ways to handle sizing, but flex-basis is the one that I like best for control.
         * There are three elements so I made it 30%. With justify content set to space between, the extra 3% per element will go to negative space
         * serving as gutters */
        flex-basis: 30%;
        font-size: 1.3em;
    }
}

/*********************************************************************
  YOUR DESKTOP-ONLY STYLES GO HERE
*********************************************************************/
@media(min-width: 780px) {

    /* Any adjustments for desktop and larger go here.
    Note these styles will be applied to anything 729px or larger -- so desktop */
    .text,
    .top {
        max-width: 800px;
        margin: auto;
    }
}